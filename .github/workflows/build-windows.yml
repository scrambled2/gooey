name: Build Windows Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # This lets you manually trigger it from GitHub UI

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc
    
    - name: Install Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Generate Windows Icon if missing
      run: |
        if (!(Test-Path "src-tauri/icons/icon.ico")) {
          Write-Host "icon.ico is missing, generating from PNG..."
          
          # Check if we have a PNG to convert
          if (Test-Path "src-tauri/icons/icon.png") {
            Write-Host "Found icon.png, installing ImageMagick to convert..."
            
            # Install ImageMagick using chocolatey (pre-installed on GitHub runners)
            choco install imagemagick -y
            
            # Convert PNG to ICO
            & magick convert src-tauri/icons/icon.png -define icon:auto-resize=256,128,64,48,32,16 src-tauri/icons/icon.ico
            Write-Host "Successfully created icon.ico"
          }
          else {
            Write-Host "No icon.png found, creating a placeholder icon.ico"
            # Create a minimal valid ICO file (1x1 pixel)
            $bytes = [byte[]](0x00,0x00,0x01,0x00,0x01,0x00,0x01,0x01,0x00,0x00,0x01,0x00,0x18,0x00,0x30,0x00,0x00,0x00,0x16,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00)
            [System.IO.File]::WriteAllBytes("src-tauri/icons/icon.ico", $bytes)
            Write-Host "Created placeholder icon.ico"
          }
        }
        else {
          Write-Host "icon.ico already exists"
        }
      shell: pwsh
    
    - name: Build Tauri App
      env:
        TAURI_SIGNING_PRIVATE_KEY: ""
        TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""
      run: bun run tauri build
    
    - name: Upload Windows Installer
      uses: actions/upload-artifact@v4
      with:
        name: Gooey-Windows-Installer
        path: |
          src-tauri/target/release/bundle/msi/*.msi
          src-tauri/target/release/bundle/nsis/*.exe
    
    - name: Upload Portable EXE
      uses: actions/upload-artifact@v4
      with:
        name: Gooey-Windows-Portable
        path: src-tauri/target/release/*.exe
